import GUI
View.Set("graphics:800;600, nobuttonbar")
setscreen("title: My Career as a Game Programmer")
%Variables
const bgColor := 255
Text.Color(white)
colorback(black)
const SCREEN_WIDTH := 800
const SCREEN_HEIGHT := 600
const BUTTON_WIDTH := 80
const BUTTON_HEIGHT := 30
var Quit, Home, Career, Schools, Sources, Game, Back: int
var Waterloo, Toronto, Seneca : int
var next1, next2: int
var HomePic, UWaterloo, UofT, SePica: int
HomePic := Pic.FileNew("HomeBG.jpg")
UWaterloo := Pic.FileNew("Detlaff.jpg")
UofT := Pic.FileNew("Revenant.jpg")
SePica := Pic.FileNew("Seneca.jpg")
%RECORDS
type Alien:
    record
	x : int
	y : int
	height: int
	width: int
	points: int
	alive: boolean
    end record
type bullet:
    record
	x : int
	y : int
	height: int
	width: int
	alive : int
    end record
%Procedures
procedure printPage(n : int)
var stream: int
put ""
put "" 
put ""
    case n of
	label 1: open: stream, "CareerInfo1.txt", get
	label 2: open: stream, "CareerInfo2.txt", get
	label 3: open: stream, "CareerInfo3.txt", get
	label 4: open: stream, "SchoolsInfo.txt", get
	label 5: open: stream, "SourcesInfo.txt", get
	label 6: open: stream, "WInfo.txt", get
	label 7: open: stream, "TInfo.txt", get
	label 8: open: stream, "SInfo.txt", get
    end case
    var fileContents: string
    loop
	exit when eof(stream)
	get: stream, fileContents :*
	put fileContents
    end loop
end printPage
procedure ShowHideAll(isHide: boolean)%except for universal buttons Home and Quit
    if isHide then
	GUI.Hide(Career)
	GUI.Hide(Schools)
	GUI.Hide(Career)
	GUI.Hide(Sources)
	GUI.Hide(Game)
	GUI.Hide(Waterloo)
	GUI.Hide(Toronto)
	GUI.Hide(Seneca)
	GUI.Hide(Back)
	GUI.Hide(next1)
	GUI.Hide(next2)
    else
	GUI.Show(Career)
	GUI.Show(Schools)
	GUI.Show(Career)
	GUI.Show(Sources)
	GUI.Show(Game)
	GUI.Show(Waterloo)
	GUI.Show(Toronto)
	GUI.Show(Seneca)  
	GUI.Show(Back)  
	GUI.Show(next1)
	GUI.Show(next2)
    end if
end ShowHideAll
procedure ShowHome
    cls
    ShowHideAll(true)
    GUI.SetBackgroundColour(bgColor)
    Pic.Draw(HomePic, -75, 0, 0)
    %Pic.Draw(Detlaff, 0, 0, 0)
    setscreen("title: My Career as a Game Programmer")
    GUI.Show(Career)
    GUI.Show(Schools)
    GUI.Show(Sources)
    GUI.Show(Game)
    GUI.Show(Home)
    GUI.Show(Quit)
end ShowHome
procedure ShowCareer
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Career Information Pt.1")
    ShowHideAll(true)
    printPage(1)
    GUI.Show(Home)
    GUI.Show(Quit)
    GUI.Show(next1)
end ShowCareer
procedure Next1
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Career Information Pt.2")
    ShowHideAll(true)
    printPage(2)
    GUI.Show(Home)
    GUI.Show(Quit)
    GUI.Show(next2)
end Next1
procedure Next2
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Career Information Pt.3")
    ShowHideAll(true)
    printPage(3)
    GUI.Show(Home)
    GUI.Show(Quit)
end Next2
procedure ShowSchools
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Schools")
    ShowHideAll(true)
    %Images
    Pic.Draw(UWaterloo, 75, 100, 0)
    Pic.Draw(UofT, 300, 100, 0)
    Pic.Draw(SePica, 530, 100, 0)
    printPage(4)
	GUI.Show(Waterloo)
    GUI.Show(Toronto)
    GUI.Show(Seneca)
    GUI.Show(Home)
    GUI.Show(Quit)
end ShowSchools
procedure ShowSources
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Sources")
    ShowHideAll(true)
    printPage(5)
    GUI.Show(Home)
    GUI.Show(Quit)
end ShowSources
procedure GameLoop
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Game Demo")
    ShowHideAll(true)
    %actual game variables
    var Bullet: bullet
    var isShooting, reload, points: int
    isShooting := 0
    reload := 1
    points := 0
    var numMonsters: int := 100
    var Aliens: array 1 .. numMonsters of Alien
    var gameOver, HomePressed: boolean
    gameOver := false
    HomePressed := false
    var input: array char of boolean
    var x, y, speed, mouseX, mouseY, mouseButton, shipWidth, shipHeight, Ship, lives, AlienPic, AlienWidth, AlienHeight: int
    Ship := Pic.FileNew("SpaceShip.jpg")
    lives := 3
    shipWidth := Pic.Width(Ship)
    shipHeight := Pic.Height(Ship)
    x := SCREEN_WIDTH div 2
    y := 100
    speed := 1
    var bspeed: int := 3
    for i: 1 .. numMonsters
	Aliens(i).points := 2
	Aliens(i).alive := false
    end for
    Bullet.alive := 0
    Bullet.y := 0
    Bullet.x := 0
    loop
	Mouse.Where(mouseX, mouseY, mouseButton)
	if mouseX < 2 * BUTTON_WIDTH and mouseX > BUTTON_WIDTH and mouseY < 600 and mouseY > 600 - BUTTON_HEIGHT and mouseButton > 0 then 
	    HomePressed := true
	end if
	exit when gameOver = true or GUI.ProcessEvent or HomePressed
	%run the program
	%move ship
	Pic.Draw(Ship, x - shipWidth div 2, y - shipHeight div 2, 0)
	Input.KeyDown(input)
	%Check to see if can shoot
	var t: int := Time.Elapsed
	if Bullet.alive = 0 then
	    isShooting := 0
	end if
	if input(KEY_LEFT_ARROW) then
	    %move left
	    x -= speed
	else if input(KEY_RIGHT_ARROW) then
	    %move right
	    x += speed
	else if input(' ') then
	    %shoot
	    if isShooting not= 1 then
		Bullet.x := x
		Bullet.y := y
		Bullet.width := 10
		Bullet.height := 20
		Bullet.alive := 1
		isShooting := 1
	    end if
	else  if input(KEY_ESC) then
	    %exit
	    gameOver := true
	    end if
	    end if
	    end if
	    end if
	%move aliens
	
	%move bullets
      if isShooting  true thent
	    Bullet.y += bspeed
	    for i: 1 .. numMonsters
		%check to see if collided
		if Aliens(i).alive then
		    if abs(Aliens(i).x - Bullet.x) <= Aliens(i).width div 2 + Bullet.width div 2 then
			if abs(Aliens(i).y - Bullet.y) <= Aliens(i).height div 2 + Bullet.height div 2  then
			    Aliens(i).alive := false
			    points += Aliens(i).points
			    Bullet.alive := 0
			end if
		    end if
		end if
	    end for
	    Draw.FillBox(Bullet.x - Bullet.width div 2, Bullet.y - Bullet.height div 2, Bullet.x + Bullet.width div 2, Bullet.y + Bullet.height div 2, 0)
	
	%detect collisions with ship
	
	% update values according to points score
    end loop
end GameLoop
procedure ShowWaterloo
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Waterloo")
    ShowHideAll(true)
    %images
    Pic.Draw(UWaterloo, 75, 100, 0)
    printPage(6)
     GUI.Show(Home)
    GUI.Show(Quit)
    GUI.Show(Back)
end ShowWaterloo
procedure ShowToronto
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Toronto")
    ShowHideAll(true)
    %images
    Pic.Draw(UofT, 300, 100, 0)
    printPage(7)
    GUI.Show(Back)
     GUI.Show(Home)
    GUI.Show(Quit)
end ShowToronto
procedure ShowSeneca
    cls
    GUI.SetBackgroundColour(bgColor)
    setscreen("title: Seneca")
    ShowHideAll(true)
    %imgae
    Pic.Draw(SePica, 530, 100, 0)
    printPage(8)
     GUI.Show(Home)
    GUI.Show(Quit)
    GUI.Show(Back)
end ShowSeneca
%Widget declarations
Quit := GUI.CreateButtonFull(0, 600 - BUTTON_HEIGHT, BUTTON_WIDTH, "Quit", GUI.Quit, BUTTON_HEIGHT, "q", false)
Home := GUI.CreateButtonFull(BUTTON_WIDTH, 600 - BUTTON_HEIGHT, BUTTON_WIDTH, "Home", ShowHome, BUTTON_HEIGHT, "h", false)
Career := GUI.CreateButtonFull(60, 50, BUTTON_WIDTH, "Career", ShowCareer, BUTTON_HEIGHT,  "c", false)
Schools := GUI.CreateButtonFull(260, 50, BUTTON_WIDTH, "Schools", ShowSchools, BUTTON_HEIGHT,  "s", false)
Sources := GUI.CreateButtonFull(460, 50, BUTTON_WIDTH, "Sources", ShowSources, BUTTON_HEIGHT,  "d", false)
Game := GUI.CreateButtonFull(660, 50, BUTTON_WIDTH, "Game", GameLoop, BUTTON_HEIGHT,  "g", false)
Waterloo := GUI.CreateButtonFull(140, 50, BUTTON_WIDTH, "Waterloo", ShowWaterloo, BUTTON_HEIGHT, "w", false)
Toronto := GUI.CreateButtonFull(360, 50, BUTTON_WIDTH, "Toronto", ShowToronto, BUTTON_HEIGHT, "t", false)
Seneca := GUI.CreateButtonFull(580, 50, BUTTON_WIDTH, "Seneca", ShowSeneca, BUTTON_HEIGHT, "l", false)
Back := GUI.CreateButtonFull(2 * BUTTON_WIDTH, 600 - BUTTON_HEIGHT, BUTTON_WIDTH, "Back", ShowSchools, BUTTON_HEIGHT, "b", false)
next1 := GUI.CreateButtonFull(SCREEN_WIDTH - BUTTON_WIDTH, 0, BUTTON_WIDTH, "Next", Next1, BUTTON_HEIGHT, "n", false)
next2 := GUI.CreateButtonFull(SCREEN_WIDTH - BUTTON_WIDTH, 0, BUTTON_WIDTH, "Next", Next2, BUTTON_HEIGHT, "n", false)
ShowHome
loop
    exit when GUI.ProcessEvent
end loop
